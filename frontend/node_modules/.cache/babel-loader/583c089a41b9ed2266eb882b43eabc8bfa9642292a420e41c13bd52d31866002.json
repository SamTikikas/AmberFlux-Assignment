{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samti\\\\OneDrive\\\\coding\\\\Desktop\\\\Media_Recorder\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Button, Container, Row, Col, Card, Alert, Badge, ProgressBar } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\nimport RecordingsList from './RecordingsList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\nconst App = () => {\n  _s();\n  // Recording state\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [recordedChunks, setRecordedChunks] = useState([]);\n  const [recordingUrl, setRecordingUrl] = useState(null);\n\n  // UI state\n  const [uploadStatus, setUploadStatus] = useState('');\n  const [refreshKey, setRefreshKey] = useState(0);\n  const [recordingTime, setRecordingTime] = useState(0);\n  const [stream, setStream] = useState(null);\n  const [error, setError] = useState('');\n\n  // Refs\n  const videoRef = useRef(null);\n  const timerRef = useRef(null);\n  const MAX_RECORDING_TIME = 180; // 3 minutes in seconds\n\n  // Timer effect\n  useEffect(() => {\n    if (isRecording) {\n      timerRef.current = setInterval(() => {\n        setRecordingTime(prevTime => {\n          const newTime = prevTime + 1;\n          if (newTime >= MAX_RECORDING_TIME) {\n            stopRecording();\n            return MAX_RECORDING_TIME;\n          }\n          return newTime;\n        });\n      }, 1000);\n    } else {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    }\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, [isRecording]);\n\n  // Cleanup effect\n  useEffect(() => {\n    return () => {\n      if (stream) {\n        stream.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, [stream]);\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n  const startRecording = async () => {\n    try {\n      // Reset previous recording data\n      setRecordedChunks([]);\n      setRecordingUrl(null);\n      setRecordingTime(0);\n      setUploadStatus('');\n      setError('');\n\n      // Check browser support\n      if (!navigator.mediaDevices || !navigator.mediaDevices.getDisplayMedia) {\n        throw new Error('Screen recording is not supported in this browser. Please use Chrome or Edge.');\n      }\n\n      // Get display media (screen + audio)\n      const displayStream = await navigator.mediaDevices.getDisplayMedia({\n        video: {\n          mediaSource: 'screen',\n          width: {\n            ideal: 1920,\n            max: 1920\n          },\n          height: {\n            ideal: 1080,\n            max: 1080\n          },\n          frameRate: {\n            ideal: 30,\n            max: 60\n          }\n        },\n        audio: {\n          echoCancellation: true,\n          noiseSuppression: true,\n          sampleRate: 44100\n        }\n      });\n      let combinedStream = displayStream;\n\n      // Try to get microphone audio and combine with screen audio\n      try {\n        const micStream = await navigator.mediaDevices.getUserMedia({\n          audio: {\n            echoCancellation: true,\n            noiseSuppression: true,\n            autoGainControl: true\n          },\n          video: false\n        });\n\n        // Combine display and microphone streams\n        const audioTracks = [...displayStream.getAudioTracks(), ...micStream.getAudioTracks()];\n        combinedStream = new MediaStream([...displayStream.getVideoTracks(), ...audioTracks]);\n      } catch (micError) {\n        console.warn('Microphone access denied, using only screen audio:', micError);\n      }\n      setStream(combinedStream);\n\n      // Check MediaRecorder support\n      if (!MediaRecorder.isTypeSupported('video/webm;codecs=vp9')) {\n        if (!MediaRecorder.isTypeSupported('video/webm')) {\n          throw new Error('WebM recording is not supported in this browser.');\n        }\n      }\n\n      // Create MediaRecorder\n      const mimeType = MediaRecorder.isTypeSupported('video/webm;codecs=vp9') ? 'video/webm;codecs=vp9' : 'video/webm';\n      const recorder = new MediaRecorder(combinedStream, {\n        mimeType,\n        videoBitsPerSecond: 2500000,\n        // 2.5 Mbps\n        audioBitsPerSecond: 128000 // 128 kbps\n      });\n      const chunks = [];\n      recorder.ondataavailable = event => {\n        if (event.data && event.data.size > 0) {\n          chunks.push(event.data);\n        }\n      };\n      recorder.onstop = () => {\n        console.log('Recording stopped, creating blob...');\n        const blob = new Blob(chunks, {\n          type: mimeType\n        });\n        const url = URL.createObjectURL(blob);\n        setRecordingUrl(url);\n        setRecordedChunks([blob]);\n\n        // Stop all tracks\n        combinedStream.getTracks().forEach(track => {\n          track.stop();\n          console.log(`Stopped ${track.kind} track`);\n        });\n        setStream(null);\n      };\n      recorder.onerror = event => {\n        console.error('MediaRecorder error:', event.error);\n        setError(`Recording error: ${event.error.message}`);\n        stopRecording();\n      };\n\n      // Handle stream ending (user stops sharing)\n      displayStream.getVideoTracks()[0].onended = () => {\n        console.log('Screen sharing ended by user');\n        if (isRecording) {\n          stopRecording();\n        }\n      };\n\n      // Start recording\n      recorder.start(1000); // Collect data every second\n      setMediaRecorder(recorder);\n      setIsRecording(true);\n\n      // Show live preview\n      if (videoRef.current) {\n        videoRef.current.srcObject = displayStream;\n      }\n      console.log('Recording started successfully');\n    } catch (error) {\n      console.error('Error starting recording:', error);\n      setError(`Failed to start recording: ${error.message}`);\n\n      // Cleanup on error\n      if (stream) {\n        stream.getTracks().forEach(track => track.stop());\n        setStream(null);\n      }\n    }\n  };\n  const stopRecording = () => {\n    console.log('Stopping recording...');\n    if (mediaRecorder && mediaRecorder.state === 'recording') {\n      mediaRecorder.stop();\n    }\n    setIsRecording(false);\n\n    // Stop all tracks\n    if (stream) {\n      stream.getTracks().forEach(track => track.stop());\n      setStream(null);\n    }\n\n    // Reset preview\n    if (videoRef.current) {\n      videoRef.current.srcObject = null;\n    }\n  };\n  const handleUpload = async () => {\n    if (recordedChunks.length === 0) {\n      alert('No recording available to upload.');\n      return;\n    }\n    setUploadStatus('uploading');\n    try {\n      const formData = new FormData();\n      const filename = `recording-${Date.now()}.webm`;\n      formData.append('video', recordedChunks[0], filename);\n      const response = await axios.post(`${API_URL}/api/recordings`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        timeout: 30000 // 30 second timeout\n      });\n      console.log('Upload successful:', response.data);\n      setUploadStatus('success');\n      setRefreshKey(prevKey => prevKey + 1);\n\n      // Clear the recording after successful upload\n      setTimeout(() => {\n        setUploadStatus('');\n      }, 3000);\n    } catch (error) {\n      console.error(\"Upload error:\", error);\n      setUploadStatus('error');\n      setTimeout(() => {\n        setUploadStatus('');\n      }, 5000);\n    }\n  };\n  const downloadRecording = () => {\n    if (recordingUrl) {\n      const a = document.createElement('a');\n      a.href = recordingUrl;\n      a.download = `recording-${new Date().toISOString().slice(0, 19).replace(/:/g, '-')}.webm`;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  };\n  const clearRecording = () => {\n    setRecordingUrl(null);\n    setRecordedChunks([]);\n    setUploadStatus('');\n    setError('');\n    setRecordingTime(0);\n    if (videoRef.current) {\n      videoRef.current.srcObject = null;\n    }\n  };\n  const progressPercentage = recordingTime / MAX_RECORDING_TIME * 100;\n  const timeRemaining = MAX_RECORDING_TIME - recordingTime;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"my-5\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        lg: 10,\n        xl: 8,\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          className: \"shadow-lg\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            className: \"bg-primary text-white text-center py-3\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"mb-0\",\n              children: [\"\\uD83C\\uDFA5 Screen Recorder\", /*#__PURE__*/_jsxDEV(Badge, {\n                bg: \"light\",\n                text: \"primary\",\n                className: \"ms-2\",\n                children: \"MERN Stack\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            className: \"p-4\",\n            children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"danger\",\n              dismissible: true,\n              onClose: () => setError(''),\n              children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n                children: \"Error\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 19\n              }, this), error]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 17\n            }, this), isRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recording-status mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-danger mb-2\",\n                  children: [\"\\uD83D\\uDD34 Recording: \", formatTime(recordingTime), \" / \", formatTime(MAX_RECORDING_TIME)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-muted mb-2\",\n                  children: [\"Time remaining: \", formatTime(timeRemaining)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n                variant: progressPercentage > 80 ? 'danger' : 'primary',\n                now: progressPercentage,\n                className: \"mb-3\",\n                style: {\n                  height: '8px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 17\n            }, this), isRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"text-center mb-3\",\n                children: \"\\uD83D\\uDCFA Live Preview\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"video-container\",\n                children: /*#__PURE__*/_jsxDEV(\"video\", {\n                  ref: videoRef,\n                  autoPlay: true,\n                  muted: true,\n                  playsInline: true,\n                  className: \"preview-video\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center mb-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-grid gap-2 d-md-flex justify-content-md-center\",\n                children: [!isRecording && !recordingUrl && /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"success\",\n                  size: \"lg\",\n                  onClick: startRecording,\n                  className: \"px-4\",\n                  children: \"\\uD83C\\uDFAC Start Screen Recording\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 21\n                }, this), isRecording && /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"danger\",\n                  size: \"lg\",\n                  onClick: stopRecording,\n                  className: \"px-4\",\n                  children: \"\\u23F9\\uFE0F Stop Recording\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 15\n            }, this), !isRecording && !recordingUrl && /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"\\uD83D\\uDCCB Instructions:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n                className: \"mb-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"Click \\\"Start Screen Recording\\\" button\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"Select the browser tab or entire screen to record\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"Allow microphone access for better audio quality\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"Recording will automatically stop after 3 minutes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"You can manually stop anytime by clicking \\\"Stop Recording\\\"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 17\n            }, this), recordingUrl && !isRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recording-result\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"text-center mb-3\",\n                children: \"\\u2705 Recording Complete!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"video-container mb-3\",\n                children: /*#__PURE__*/_jsxDEV(\"video\", {\n                  src: recordingUrl,\n                  controls: true,\n                  className: \"result-video\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-grid gap-2 d-md-flex justify-content-md-center mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"info\",\n                    onClick: downloadRecording,\n                    className: \"px-4\",\n                    children: \"\\uD83D\\uDCE5 Download Recording\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 408,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"primary\",\n                    onClick: handleUpload,\n                    disabled: uploadStatus === 'uploading',\n                    className: \"px-4\",\n                    children: uploadStatus === 'uploading' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: \"\\u23F3 Uploading...\"\n                    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: \"\\u2601\\uFE0F Upload to Server\"\n                    }, void 0, false)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 416,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outline-secondary\",\n                    onClick: clearRecording,\n                    className: \"px-4\",\n                    children: \"\\uD83D\\uDDD1\\uFE0F Clear\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 429,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-success\",\n                  onClick: () => {\n                    clearRecording();\n                    // Small delay to ensure state is reset\n                    setTimeout(() => {\n                      startRecording();\n                    }, 100);\n                  },\n                  className: \"px-4\",\n                  children: \"\\uD83D\\uDD04 Record Another\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 17\n            }, this), uploadStatus === 'success' && /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"success\",\n              className: \"mt-3\",\n              children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n                children: \"\\u2705 Success!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 19\n              }, this), \"Recording uploaded successfully! Check the recordings list below.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 17\n            }, this), uploadStatus === 'error' && /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"danger\",\n              className: \"mt-3\",\n              children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n                children: \"\\u274C Upload Failed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 19\n              }, this), \"Failed to upload recording. Please check your connection and try again.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RecordingsList, {\n          refreshKey: refreshKey,\n          apiUrl: API_URL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 296,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"5V+mGyM0db1XaQEuuHuDt+Bdiko=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Button","Container","Row","Col","Card","Alert","Badge","ProgressBar","axios","RecordingsList","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","process","env","REACT_APP_API_URL","App","_s","isRecording","setIsRecording","mediaRecorder","setMediaRecorder","recordedChunks","setRecordedChunks","recordingUrl","setRecordingUrl","uploadStatus","setUploadStatus","refreshKey","setRefreshKey","recordingTime","setRecordingTime","stream","setStream","error","setError","videoRef","timerRef","MAX_RECORDING_TIME","current","setInterval","prevTime","newTime","stopRecording","clearInterval","getTracks","forEach","track","stop","formatTime","seconds","mins","Math","floor","secs","toString","padStart","startRecording","navigator","mediaDevices","getDisplayMedia","Error","displayStream","video","mediaSource","width","ideal","max","height","frameRate","audio","echoCancellation","noiseSuppression","sampleRate","combinedStream","micStream","getUserMedia","autoGainControl","audioTracks","getAudioTracks","MediaStream","getVideoTracks","micError","console","warn","MediaRecorder","isTypeSupported","mimeType","recorder","videoBitsPerSecond","audioBitsPerSecond","chunks","ondataavailable","event","data","size","push","onstop","log","blob","Blob","type","url","URL","createObjectURL","kind","onerror","message","onended","start","srcObject","state","handleUpload","length","alert","formData","FormData","filename","Date","now","append","response","post","headers","timeout","prevKey","setTimeout","downloadRecording","a","document","createElement","href","download","toISOString","slice","replace","body","appendChild","click","removeChild","clearRecording","progressPercentage","timeRemaining","className","children","lg","xl","Header","bg","text","fileName","_jsxFileName","lineNumber","columnNumber","Body","variant","dismissible","onClose","Heading","style","ref","autoPlay","muted","playsInline","onClick","src","controls","disabled","apiUrl","_c","$RefreshReg$"],"sources":["C:/Users/samti/OneDrive/coding/Desktop/Media_Recorder/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { Button, Container, Row, Col, Card, Alert, Badge, ProgressBar } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\nimport RecordingsList from './RecordingsList';\nimport './App.css';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\nconst App = () => {\n  // Recording state\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [recordedChunks, setRecordedChunks] = useState([]);\n  const [recordingUrl, setRecordingUrl] = useState(null);\n  \n  // UI state\n  const [uploadStatus, setUploadStatus] = useState('');\n  const [refreshKey, setRefreshKey] = useState(0);\n  const [recordingTime, setRecordingTime] = useState(0);\n  const [stream, setStream] = useState(null);\n  const [error, setError] = useState('');\n  \n  // Refs\n  const videoRef = useRef(null);\n  const timerRef = useRef(null);\n  \n  const MAX_RECORDING_TIME = 180; // 3 minutes in seconds\n\n  // Timer effect\n  useEffect(() => {\n    if (isRecording) {\n      timerRef.current = setInterval(() => {\n        setRecordingTime(prevTime => {\n          const newTime = prevTime + 1;\n          if (newTime >= MAX_RECORDING_TIME) {\n            stopRecording();\n            return MAX_RECORDING_TIME;\n          }\n          return newTime;\n        });\n      }, 1000);\n    } else {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    }\n\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, [isRecording]);\n\n  // Cleanup effect\n  useEffect(() => {\n    return () => {\n      if (stream) {\n        stream.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, [stream]);\n\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const startRecording = async () => {\n    try {\n      // Reset previous recording data\n      setRecordedChunks([]);\n      setRecordingUrl(null);\n      setRecordingTime(0);\n      setUploadStatus('');\n      setError('');\n\n      // Check browser support\n      if (!navigator.mediaDevices || !navigator.mediaDevices.getDisplayMedia) {\n        throw new Error('Screen recording is not supported in this browser. Please use Chrome or Edge.');\n      }\n\n      // Get display media (screen + audio)\n      const displayStream = await navigator.mediaDevices.getDisplayMedia({\n        video: { \n          mediaSource: 'screen',\n          width: { ideal: 1920, max: 1920 },\n          height: { ideal: 1080, max: 1080 },\n          frameRate: { ideal: 30, max: 60 }\n        },\n        audio: {\n          echoCancellation: true,\n          noiseSuppression: true,\n          sampleRate: 44100\n        }\n      });\n\n      let combinedStream = displayStream;\n\n      // Try to get microphone audio and combine with screen audio\n      try {\n        const micStream = await navigator.mediaDevices.getUserMedia({\n          audio: {\n            echoCancellation: true,\n            noiseSuppression: true,\n            autoGainControl: true\n          },\n          video: false\n        });\n        \n        // Combine display and microphone streams\n        const audioTracks = [\n          ...displayStream.getAudioTracks(),\n          ...micStream.getAudioTracks()\n        ];\n        \n        combinedStream = new MediaStream([\n          ...displayStream.getVideoTracks(),\n          ...audioTracks\n        ]);\n      } catch (micError) {\n        console.warn('Microphone access denied, using only screen audio:', micError);\n       \n      }\n\n      setStream(combinedStream);\n\n      // Check MediaRecorder support\n      if (!MediaRecorder.isTypeSupported('video/webm;codecs=vp9')) {\n        if (!MediaRecorder.isTypeSupported('video/webm')) {\n          throw new Error('WebM recording is not supported in this browser.');\n        }\n      }\n\n      // Create MediaRecorder\n      const mimeType = MediaRecorder.isTypeSupported('video/webm;codecs=vp9') \n        ? 'video/webm;codecs=vp9' \n        : 'video/webm';\n        \n      const recorder = new MediaRecorder(combinedStream, {\n        mimeType,\n        videoBitsPerSecond: 2500000, // 2.5 Mbps\n        audioBitsPerSecond: 128000   // 128 kbps\n      });\n\n      const chunks = [];\n      \n      recorder.ondataavailable = (event) => {\n        if (event.data && event.data.size > 0) {\n          chunks.push(event.data);\n        }\n      };\n\n      recorder.onstop = () => {\n        console.log('Recording stopped, creating blob...');\n        const blob = new Blob(chunks, { type: mimeType });\n        const url = URL.createObjectURL(blob);\n        setRecordingUrl(url);\n        setRecordedChunks([blob]);\n        \n        // Stop all tracks\n        combinedStream.getTracks().forEach(track => {\n          track.stop();\n          console.log(`Stopped ${track.kind} track`);\n        });\n        setStream(null);\n      };\n\n      recorder.onerror = (event) => {\n        console.error('MediaRecorder error:', event.error);\n        setError(`Recording error: ${event.error.message}`);\n        stopRecording();\n      };\n\n      // Handle stream ending (user stops sharing)\n      displayStream.getVideoTracks()[0].onended = () => {\n        console.log('Screen sharing ended by user');\n        if (isRecording) {\n          stopRecording();\n        }\n      };\n\n      // Start recording\n      recorder.start(1000); // Collect data every second\n      setMediaRecorder(recorder);\n      setIsRecording(true);\n\n      // Show live preview\n      if (videoRef.current) {\n        videoRef.current.srcObject = displayStream;\n      }\n\n      console.log('Recording started successfully');\n\n    } catch (error) {\n      console.error('Error starting recording:', error);\n      setError(`Failed to start recording: ${error.message}`);\n      \n      // Cleanup on error\n      if (stream) {\n        stream.getTracks().forEach(track => track.stop());\n        setStream(null);\n      }\n    }\n  };\n\n  const stopRecording = () => {\n    console.log('Stopping recording...');\n    \n    if (mediaRecorder && mediaRecorder.state === 'recording') {\n      mediaRecorder.stop();\n    }\n    \n    setIsRecording(false);\n    \n    // Stop all tracks\n    if (stream) {\n      stream.getTracks().forEach(track => track.stop());\n      setStream(null);\n    }\n\n    // Reset preview\n    if (videoRef.current) {\n      videoRef.current.srcObject = null;\n    }\n  };\n\n  const handleUpload = async () => {\n    if (recordedChunks.length === 0) {\n      alert('No recording available to upload.');\n      return;\n    }\n\n    setUploadStatus('uploading');\n\n    try {\n      const formData = new FormData();\n      const filename = `recording-${Date.now()}.webm`;\n      formData.append('video', recordedChunks[0], filename);\n\n      const response = await axios.post(`${API_URL}/api/recordings`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n        timeout: 30000, // 30 second timeout\n      });\n\n      console.log('Upload successful:', response.data);\n      setUploadStatus('success');\n      setRefreshKey(prevKey => prevKey + 1);\n      \n      // Clear the recording after successful upload\n      setTimeout(() => {\n        setUploadStatus('');\n      }, 3000);\n      \n    } catch (error) {\n      console.error(\"Upload error:\", error);\n      setUploadStatus('error');\n      \n      setTimeout(() => {\n        setUploadStatus('');\n      }, 5000);\n    }\n  };\n\n  const downloadRecording = () => {\n    if (recordingUrl) {\n      const a = document.createElement('a');\n      a.href = recordingUrl;\n      a.download = `recording-${new Date().toISOString().slice(0, 19).replace(/:/g, '-')}.webm`;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  };\n\n  const clearRecording = () => {\n    setRecordingUrl(null);\n    setRecordedChunks([]);\n    setUploadStatus('');\n    setError('');\n    setRecordingTime(0);\n    \n    if (videoRef.current) {\n      videoRef.current.srcObject = null;\n    }\n  };\n\n  const progressPercentage = (recordingTime / MAX_RECORDING_TIME) * 100;\n  const timeRemaining = MAX_RECORDING_TIME - recordingTime;\n\n  return (\n    <Container className=\"my-5\">\n      <Row className=\"justify-content-center\">\n        <Col lg={10} xl={8}>\n          <Card className=\"shadow-lg\">\n            <Card.Header className=\"bg-primary text-white text-center py-3\">\n              <h1 className=\"mb-0\">\n                🎥 Screen Recorder\n                <Badge bg=\"light\" text=\"primary\" className=\"ms-2\">MERN Stack</Badge>\n              </h1>\n            </Card.Header>\n            \n            <Card.Body className=\"p-4\">\n              {/* Error Display */}\n              {error && (\n                <Alert variant=\"danger\" dismissible onClose={() => setError('')}>\n                  <Alert.Heading>Error</Alert.Heading>\n                  {error}\n                </Alert>\n              )}\n\n              {/* Recording Timer */}\n              {isRecording && (\n                <div className=\"recording-status mb-4\">\n                  <div className=\"text-center mb-3\">\n                    <h3 className=\"text-danger mb-2\">\n                      🔴 Recording: {formatTime(recordingTime)} / {formatTime(MAX_RECORDING_TIME)}\n                    </h3>\n                    <p className=\"text-muted mb-2\">\n                      Time remaining: {formatTime(timeRemaining)}\n                    </p>\n                  </div>\n                  <ProgressBar \n                    variant={progressPercentage > 80 ? 'danger' : 'primary'}\n                    now={progressPercentage} \n                    className=\"mb-3\"\n                    style={{ height: '8px' }}\n                  />\n                </div>\n              )}\n\n              {/* Live Preview */}\n              {isRecording && (\n                <div className=\"mb-4\">\n                  <h5 className=\"text-center mb-3\">📺 Live Preview</h5>\n                  <div className=\"video-container\">\n                    <video\n                      ref={videoRef}\n                      autoPlay\n                      muted\n                      playsInline\n                      className=\"preview-video\"\n                    />\n                  </div>\n                </div>\n              )}\n\n              {/* Control Buttons */}\n              <div className=\"text-center mb-4\">\n                <div className=\"d-grid gap-2 d-md-flex justify-content-md-center\">\n                  {!isRecording && !recordingUrl && (\n                    <Button\n                      variant=\"success\"\n                      size=\"lg\"\n                      onClick={startRecording}\n                      className=\"px-4\"\n                    >\n                      🎬 Start Screen Recording\n                    </Button>\n                  )}\n                  \n                  {isRecording && (\n                    <Button\n                      variant=\"danger\"\n                      size=\"lg\"\n                      onClick={stopRecording}\n                      className=\"px-4\"\n                    >\n                      ⏹️ Stop Recording\n                    </Button>\n                  )}\n                </div>\n              </div>\n\n              {/* Instructions */}\n              {!isRecording && !recordingUrl && (\n                <Alert variant=\"info\">\n                  <h5>📋 Instructions:</h5>\n                  <ol className=\"mb-0\">\n                    <li>Click \"Start Screen Recording\" button</li>\n                    <li>Select the browser tab or entire screen to record</li>\n                    <li>Allow microphone access for better audio quality</li>\n                    <li>Recording will automatically stop after 3 minutes</li>\n                    <li>You can manually stop anytime by clicking \"Stop Recording\"</li>\n                  </ol>\n                </Alert>\n              )}\n\n              {/* Recording Preview & Actions */}\n              {recordingUrl && !isRecording && (\n                <div className=\"recording-result\">\n                  <h5 className=\"text-center mb-3\">✅ Recording Complete!</h5>\n                  \n                  <div className=\"video-container mb-3\">\n                    <video\n                      src={recordingUrl}\n                      controls\n                      className=\"result-video\"\n                    />\n                  </div>\n                  \n                  <div className=\"text-center\">\n                    <div className=\"d-grid gap-2 d-md-flex justify-content-md-center mb-3\">\n                      <Button \n                        variant=\"info\" \n                        onClick={downloadRecording}\n                        className=\"px-4\"\n                      >\n                        📥 Download Recording\n                      </Button>\n                      \n                      <Button\n                        variant=\"primary\"\n                        onClick={handleUpload}\n                        disabled={uploadStatus === 'uploading'}\n                        className=\"px-4\"\n                      >\n                        {uploadStatus === 'uploading' ? (\n                          <>⏳ Uploading...</>\n                        ) : (\n                          <>☁️ Upload to Server</>\n                        )}\n                      </Button>\n                      \n                      <Button \n                        variant=\"outline-secondary\" \n                        onClick={clearRecording}\n                        className=\"px-4\"\n                      >\n                        🗑️ Clear\n                      </Button>\n                    </div>\n                    \n                    <Button \n                      variant=\"outline-success\" \n                      onClick={() => {\n                        clearRecording();\n                        // Small delay to ensure state is reset\n                        setTimeout(() => {\n                          startRecording();\n                        }, 100);\n                      }}\n                      className=\"px-4\"\n                    >\n                      🔄 Record Another\n                    </Button>\n                  </div>\n                </div>\n              )}\n\n              {/* Upload Status */}\n              {uploadStatus === 'success' && (\n                <Alert variant=\"success\" className=\"mt-3\">\n                  <Alert.Heading>✅ Success!</Alert.Heading>\n                  Recording uploaded successfully! Check the recordings list below.\n                </Alert>\n              )}\n              \n              {uploadStatus === 'error' && (\n                <Alert variant=\"danger\" className=\"mt-3\">\n                  <Alert.Heading>❌ Upload Failed</Alert.Heading>\n                  Failed to upload recording. Please check your connection and try again.\n                </Alert>\n              )}\n            </Card.Body>\n          </Card>\n\n          {/* Recordings List */}\n          <RecordingsList refreshKey={refreshKey} apiUrl={API_URL} />\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}