{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samti\\\\OneDrive\\\\coding\\\\Desktop\\\\Media_Recorder\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Button, Container, Card, Alert, ProgressBar, Nav, Navbar } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\nimport RecordingsList from './RecordingsList';\nimport './App.css';\nimport './design.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\nconst App = () => {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [recordedChunks, setRecordedChunks] = useState([]);\n  const [recordingUrl, setRecordingUrl] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState('');\n  const [refreshKey, setRefreshKey] = useState(0);\n  const [recordingTime, setRecordingTime] = useState(0);\n  const [stream, setStream] = useState(null);\n  const [error, setError] = useState('');\n  const [currentView, setCurrentView] = useState('recorder');\n  const videoRef = useRef(null);\n  const timerRef = useRef(null);\n  const MAX_RECORDING_TIME = 180; // seconds\n\n  useEffect(() => {\n    if (isRecording) {\n      timerRef.current = setInterval(() => {\n        setRecordingTime(prev => {\n          if (prev + 1 >= MAX_RECORDING_TIME) {\n            stopRecording();\n            return MAX_RECORDING_TIME;\n          }\n          return prev + 1;\n        });\n      }, 1000);\n    } else if (timerRef.current) {\n      clearInterval(timerRef.current);\n    }\n    return () => {\n      if (timerRef.current) clearInterval(timerRef.current);\n    };\n  }, [isRecording]);\n  useEffect(() => {\n    return () => {\n      if (stream) {\n        stream.getTracks().forEach(t => t.stop());\n      }\n    };\n  }, [stream]);\n  const formatTime = sec => {\n    const m = Math.floor(sec / 60).toString().padStart(2, '0');\n    const s = (sec % 60).toString().padStart(2, '0');\n    return `${m}:${s}`;\n  };\n  const startRecording = async () => {\n    try {\n      setRecordedChunks([]);\n      setRecordingUrl(null);\n      setRecordingTime(0);\n      setUploadStatus('');\n      setError('');\n      if (!navigator.mediaDevices || !navigator.mediaDevices.getDisplayMedia) {\n        throw new Error('Screen recording not supported. Use Chrome or Edge.');\n      }\n      const displayStream = await navigator.mediaDevices.getDisplayMedia({\n        video: {\n          frameRate: {\n            ideal: 30,\n            max: 60\n          }\n        },\n        audio: true\n      });\n      let combinedStream = displayStream;\n      try {\n        const micStream = await navigator.mediaDevices.getUserMedia({\n          audio: true,\n          video: false\n        });\n        combinedStream = new MediaStream([...displayStream.getVideoTracks(), ...displayStream.getAudioTracks(), ...micStream.getAudioTracks()]);\n      } catch (micError) {\n        console.warn('Mic access denied, continuing with screen audio only');\n      }\n      setStream(combinedStream);\n      let mimeType = 'video/webm;codecs=vp9';\n      if (!MediaRecorder.isTypeSupported(mimeType)) {\n        mimeType = 'video/webm';\n        if (!MediaRecorder.isTypeSupported(mimeType)) {\n          throw new Error('WebM recording not supported.');\n        }\n      }\n      const recorder = new MediaRecorder(combinedStream, {\n        mimeType,\n        videoBitsPerSecond: 2500000,\n        audioBitsPerSecond: 128000\n      });\n      const chunks = [];\n      recorder.ondataavailable = e => {\n        if (e.data && e.data.size > 0) chunks.push(e.data);\n      };\n      recorder.onstop = () => {\n        const blob = new Blob(chunks, {\n          type: mimeType\n        });\n        const url = URL.createObjectURL(blob);\n        setRecordingUrl(url);\n        setRecordedChunks([blob]);\n        combinedStream.getTracks().forEach(t => t.stop());\n        setStream(null);\n      };\n      recorder.onerror = e => {\n        setError(`Recording error: ${e.error.message}`);\n        stopRecording();\n      };\n      displayStream.getVideoTracks()[0].onended = () => {\n        console.log('User stopped screen sharing');\n        if (isRecording) stopRecording();\n      };\n      recorder.start(1000);\n      setMediaRecorder(recorder);\n      setIsRecording(true);\n      if (videoRef.current) videoRef.current.srcObject = displayStream;\n    } catch (err) {\n      setError(`Failed to start recording: ${err.message}`);\n      if (stream) {\n        stream.getTracks().forEach(t => t.stop());\n        setStream(null);\n      }\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorder && mediaRecorder.state === 'recording') {\n      mediaRecorder.stop();\n    }\n    setIsRecording(false);\n    if (stream) {\n      stream.getTracks().forEach(t => t.stop());\n      setStream(null);\n    }\n    if (videoRef.current) videoRef.current.srcObject = null;\n  };\n  const handleUpload = async () => {\n    if (recordedChunks.length === 0) return alert('No recording to upload');\n    setUploadStatus('uploading');\n    try {\n      const formData = new FormData();\n      formData.append('video', recordedChunks[0], `recording-${Date.now()}.webm`);\n      await axios.post(`${API_URL}/api/recordings`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        timeout: 30000\n      });\n      setUploadStatus('success');\n      setRefreshKey(k => k + 1);\n      setTimeout(() => setUploadStatus(''), 3000);\n    } catch (err) {\n      setUploadStatus('error');\n      setTimeout(() => setUploadStatus(''), 5000);\n    }\n  };\n  const downloadRecording = () => {\n    if (!recordingUrl) return;\n    const a = document.createElement('a');\n    a.href = recordingUrl;\n    a.download = `recording-${new Date().toISOString().slice(0, 19).replace(/:/g, '-')}.webm`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  };\n  const clearRecording = () => {\n    setRecordingUrl(null);\n    setRecordedChunks([]);\n    setUploadStatus('');\n    setError('');\n    setRecordingTime(0);\n    if (videoRef.current) videoRef.current.srcObject = null;\n  };\n  const progressPercent = recordingTime / MAX_RECORDING_TIME * 100;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      bg: \"primary\",\n      variant: \"dark\",\n      className: \"navbar-custom\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n          href: \"#\",\n          className: \"brand-logo\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-camera-reels brand-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), \"Screen Recorder\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Nav, {\n          children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n            className: `nav-link-custom ${currentView === 'recorder' ? 'active' : ''}`,\n            onClick: () => setCurrentView('recorder'),\n            children: \"Recorder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n            className: `nav-link-custom ${currentView === 'list' ? 'active' : ''}`,\n            onClick: () => setCurrentView('list'),\n            children: \"Recordings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"main-content\",\n      children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 19\n      }, this), currentView === 'recorder' && /*#__PURE__*/_jsxDEV(Card, {\n        className: \"main-card mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          className: \"card-header-custom\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"card-title\",\n            children: \"Record Your Screen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          className: \"card-body-custom\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex gap-3 align-items-center mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: isRecording ? 'danger' : 'success',\n              onClick: isRecording ? stopRecording : startRecording,\n              children: isRecording ? 'Stop Recording' : 'Start Recording'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n              now: progressPercent,\n              label: formatTime(recordingTime),\n              style: {\n                flex: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this), recordingUrl && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"video\", {\n              ref: videoRef,\n              controls: true,\n              src: recordingUrl,\n              width: \"100%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-3 d-flex gap-2 flex-wrap\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: downloadRecording,\n                children: \"Download\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: handleUpload,\n                disabled: uploadStatus === 'uploading',\n                children: uploadStatus === 'uploading' ? 'Uploading...' : 'Upload'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"secondary\",\n                onClick: clearRecording,\n                children: \"Clear\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), uploadStatus === 'success' && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"success\",\n            className: \"mt-3\",\n            children: \"Recording uploaded successfully!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 17\n          }, this), uploadStatus === 'error' && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"danger\",\n            className: \"mt-3\",\n            children: \"Failed to upload recording. Please try again.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this), currentView === 'list' && /*#__PURE__*/_jsxDEV(RecordingsList, {\n        apiUrl: API_URL\n      }, refreshKey, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"E8laYzIA6M5+44hW4IUljY0g2uA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Button","Container","Card","Alert","ProgressBar","Nav","Navbar","axios","RecordingsList","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","process","env","REACT_APP_API_URL","App","_s","isRecording","setIsRecording","mediaRecorder","setMediaRecorder","recordedChunks","setRecordedChunks","recordingUrl","setRecordingUrl","uploadStatus","setUploadStatus","refreshKey","setRefreshKey","recordingTime","setRecordingTime","stream","setStream","error","setError","currentView","setCurrentView","videoRef","timerRef","MAX_RECORDING_TIME","current","setInterval","prev","stopRecording","clearInterval","getTracks","forEach","t","stop","formatTime","sec","m","Math","floor","toString","padStart","s","startRecording","navigator","mediaDevices","getDisplayMedia","Error","displayStream","video","frameRate","ideal","max","audio","combinedStream","micStream","getUserMedia","MediaStream","getVideoTracks","getAudioTracks","micError","console","warn","mimeType","MediaRecorder","isTypeSupported","recorder","videoBitsPerSecond","audioBitsPerSecond","chunks","ondataavailable","e","data","size","push","onstop","blob","Blob","type","url","URL","createObjectURL","onerror","message","onended","log","start","srcObject","err","state","handleUpload","length","alert","formData","FormData","append","Date","now","post","headers","timeout","k","setTimeout","downloadRecording","a","document","createElement","href","download","toISOString","slice","replace","body","appendChild","click","removeChild","clearRecording","progressPercent","children","bg","variant","className","Brand","fileName","_jsxFileName","lineNumber","columnNumber","Link","onClick","Header","Body","label","style","flex","ref","controls","src","width","disabled","apiUrl","_c","$RefreshReg$"],"sources":["C:/Users/samti/OneDrive/coding/Desktop/Media_Recorder/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport {\n  Button,\n  Container,\n  Card,\n  Alert,\n  ProgressBar,\n  Nav,\n  Navbar,\n} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\nimport RecordingsList from './RecordingsList';\nimport './App.css';\nimport './design.css';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\nconst App = () => {\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [recordedChunks, setRecordedChunks] = useState([]);\n  const [recordingUrl, setRecordingUrl] = useState(null);\n\n  const [uploadStatus, setUploadStatus] = useState('');\n  const [refreshKey, setRefreshKey] = useState(0);\n  const [recordingTime, setRecordingTime] = useState(0);\n  const [stream, setStream] = useState(null);\n  const [error, setError] = useState('');\n  const [currentView, setCurrentView] = useState('recorder');\n\n  const videoRef = useRef(null);\n  const timerRef = useRef(null);\n\n  const MAX_RECORDING_TIME = 180; // seconds\n\n  useEffect(() => {\n    if (isRecording) {\n      timerRef.current = setInterval(() => {\n        setRecordingTime((prev) => {\n          if (prev + 1 >= MAX_RECORDING_TIME) {\n            stopRecording();\n            return MAX_RECORDING_TIME;\n          }\n          return prev + 1;\n        });\n      }, 1000);\n    } else if (timerRef.current) {\n      clearInterval(timerRef.current);\n    }\n\n    return () => {\n      if (timerRef.current) clearInterval(timerRef.current);\n    };\n  }, [isRecording]);\n\n  useEffect(() => {\n    return () => {\n      if (stream) {\n        stream.getTracks().forEach((t) => t.stop());\n      }\n    };\n  }, [stream]);\n\n  const formatTime = (sec) => {\n    const m = Math.floor(sec / 60)\n      .toString()\n      .padStart(2, '0');\n    const s = (sec % 60).toString().padStart(2, '0');\n    return `${m}:${s}`;\n  };\n\n  const startRecording = async () => {\n    try {\n      setRecordedChunks([]);\n      setRecordingUrl(null);\n      setRecordingTime(0);\n      setUploadStatus('');\n      setError('');\n\n      if (\n        !navigator.mediaDevices ||\n        !navigator.mediaDevices.getDisplayMedia\n      ) {\n        throw new Error(\n          'Screen recording not supported. Use Chrome or Edge.'\n        );\n      }\n\n      const displayStream = await navigator.mediaDevices.getDisplayMedia({\n        video: { frameRate: { ideal: 30, max: 60 } },\n        audio: true,\n      });\n\n      let combinedStream = displayStream;\n\n      try {\n        const micStream = await navigator.mediaDevices.getUserMedia({\n          audio: true,\n          video: false,\n        });\n\n        combinedStream = new MediaStream([\n          ...displayStream.getVideoTracks(),\n          ...displayStream.getAudioTracks(),\n          ...micStream.getAudioTracks(),\n        ]);\n      } catch (micError) {\n        console.warn('Mic access denied, continuing with screen audio only');\n      }\n\n      setStream(combinedStream);\n\n      let mimeType = 'video/webm;codecs=vp9';\n      if (!MediaRecorder.isTypeSupported(mimeType)) {\n        mimeType = 'video/webm';\n        if (!MediaRecorder.isTypeSupported(mimeType)) {\n          throw new Error('WebM recording not supported.');\n        }\n      }\n\n      const recorder = new MediaRecorder(combinedStream, {\n        mimeType,\n        videoBitsPerSecond: 2500000,\n        audioBitsPerSecond: 128000,\n      });\n\n      const chunks = [];\n      recorder.ondataavailable = (e) => {\n        if (e.data && e.data.size > 0) chunks.push(e.data);\n      };\n\n      recorder.onstop = () => {\n        const blob = new Blob(chunks, { type: mimeType });\n        const url = URL.createObjectURL(blob);\n        setRecordingUrl(url);\n        setRecordedChunks([blob]);\n        combinedStream.getTracks().forEach((t) => t.stop());\n        setStream(null);\n      };\n\n      recorder.onerror = (e) => {\n        setError(`Recording error: ${e.error.message}`);\n        stopRecording();\n      };\n\n      displayStream.getVideoTracks()[0].onended = () => {\n        console.log('User stopped screen sharing');\n        if (isRecording) stopRecording();\n      };\n\n      recorder.start(1000);\n      setMediaRecorder(recorder);\n      setIsRecording(true);\n\n      if (videoRef.current) videoRef.current.srcObject = displayStream;\n    } catch (err) {\n      setError(`Failed to start recording: ${err.message}`);\n      if (stream) {\n        stream.getTracks().forEach((t) => t.stop());\n        setStream(null);\n      }\n    }\n  };\n\n  const stopRecording = () => {\n    if (mediaRecorder && mediaRecorder.state === 'recording') {\n      mediaRecorder.stop();\n    }\n    setIsRecording(false);\n    if (stream) {\n      stream.getTracks().forEach((t) => t.stop());\n      setStream(null);\n    }\n    if (videoRef.current) videoRef.current.srcObject = null;\n  };\n\n  const handleUpload = async () => {\n    if (recordedChunks.length === 0) return alert('No recording to upload');\n    setUploadStatus('uploading');\n    try {\n      const formData = new FormData();\n      formData.append(\n        'video',\n        recordedChunks[0],\n        `recording-${Date.now()}.webm`\n      );\n\n      await axios.post(`${API_URL}/api/recordings`, formData, {\n        headers: { 'Content-Type': 'multipart/form-data' },\n        timeout: 30000,\n      });\n\n      setUploadStatus('success');\n      setRefreshKey((k) => k + 1);\n      setTimeout(() => setUploadStatus(''), 3000);\n    } catch (err) {\n      setUploadStatus('error');\n      setTimeout(() => setUploadStatus(''), 5000);\n    }\n  };\n\n  const downloadRecording = () => {\n    if (!recordingUrl) return;\n    const a = document.createElement('a');\n    a.href = recordingUrl;\n    a.download = `recording-${new Date()\n      .toISOString()\n      .slice(0, 19)\n      .replace(/:/g, '-')}.webm`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  };\n\n  const clearRecording = () => {\n    setRecordingUrl(null);\n    setRecordedChunks([]);\n    setUploadStatus('');\n    setError('');\n    setRecordingTime(0);\n    if (videoRef.current) videoRef.current.srcObject = null;\n  };\n\n  const progressPercent = (recordingTime / MAX_RECORDING_TIME) * 100;\n\n  return (\n    <>\n      <Navbar bg=\"primary\" variant=\"dark\" className=\"navbar-custom\">\n        <Container>\n          <Navbar.Brand href=\"#\" className=\"brand-logo\">\n            <i className=\"bi bi-camera-reels brand-icon\" />\n            Screen Recorder\n          </Navbar.Brand>\n          <Nav>\n            <Nav.Link\n              className={`nav-link-custom ${\n                currentView === 'recorder' ? 'active' : ''\n              }`}\n              onClick={() => setCurrentView('recorder')}\n            >\n              Recorder\n            </Nav.Link>\n            <Nav.Link\n              className={`nav-link-custom ${\n                currentView === 'list' ? 'active' : ''\n              }`}\n              onClick={() => setCurrentView('list')}\n            >\n              Recordings\n            </Nav.Link>\n          </Nav>\n        </Container>\n      </Navbar>\n\n      <Container className=\"main-content\">\n        {error && <Alert variant=\"danger\">{error}</Alert>}\n\n        {currentView === 'recorder' && (\n          <Card className=\"main-card mb-4\">\n            <Card.Header className=\"card-header-custom\">\n              <h2 className=\"card-title\">Record Your Screen</h2>\n            </Card.Header>\n            <Card.Body className=\"card-body-custom\">\n              <div className=\"d-flex gap-3 align-items-center mb-3\">\n                <Button\n                  variant={isRecording ? 'danger' : 'success'}\n                  onClick={isRecording ? stopRecording : startRecording}\n                >\n                  {isRecording ? 'Stop Recording' : 'Start Recording'}\n                </Button>\n                <ProgressBar\n                  now={progressPercent}\n                  label={formatTime(recordingTime)}\n                  style={{ flex: 1 }}\n                />\n              </div>\n\n              {recordingUrl && (\n                <>\n                  <video ref={videoRef} controls src={recordingUrl} width=\"100%\" />\n                  <div className=\"mt-3 d-flex gap-2 flex-wrap\">\n                    <Button variant=\"primary\" onClick={downloadRecording}>\n                      Download\n                    </Button>\n                    <Button\n                      variant=\"primary\"\n                      onClick={handleUpload}\n                      disabled={uploadStatus === 'uploading'}\n                    >\n                      {uploadStatus === 'uploading' ? 'Uploading...' : 'Upload'}\n                    </Button>\n                    <Button variant=\"secondary\" onClick={clearRecording}>\n                      Clear\n                    </Button>\n                  </div>\n                </>\n              )}\n\n              {uploadStatus === 'success' && (\n                <Alert variant=\"success\" className=\"mt-3\">\n                  Recording uploaded successfully!\n                </Alert>\n              )}\n              {uploadStatus === 'error' && (\n                <Alert variant=\"danger\" className=\"mt-3\">\n                  Failed to upload recording. Please try again.\n                </Alert>\n              )}\n            </Card.Body>\n          </Card>\n        )}\n\n        {currentView === 'list' && <RecordingsList key={refreshKey} apiUrl={API_URL} />}\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}